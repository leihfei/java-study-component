工厂模式Factory Pattern:
    定义了一个创建对象的接口，但由于子类决定要实例化的类是哪一个，工厂方法让类把实例化推迟到了之类。

工厂模式分类：
    1. 简单工厂模式
        设计方案：定义一个创建对象的类，由这个类来封装实例化对象。
    2. 工厂方法模式
        设计方案： 定义一个创建对象的抽象方法，由子类决定要实例化的类，工厂方法模式将对象的实例化推迟到了子类。
    3. 抽象工厂模式
        设计方案： 定义了一个接口用于创建相关或有依赖关系的对象族，而无须明确指定具体类。

样例：
 披萨项目： 要方便披萨品种的扩展，要便于维护，要能运行时扩展。

 依赖抽象原则：
    变量不要持有具体类的引用
    不要让类继承自具体类，要继承自抽象类或者接口
    不要覆盖基类中已实现的方法


