代理模式：
    为另一个对象提供一个替身或占位符以控制对这个对象的访问

代理模式：
    1. 防火墙代理
        控制网络资源的方位，保护主体免于“坏客户”的侵害

    2. 智能引用代理
        当主题被引用时，进行额外的动作

    3. 缓存代理
        为开销大的运算结果提供暂时存储；它也允许多个客户共享结果，
        以减少计算或网络延迟

    4. 同步代理
        在多线程的情况下为主题提供安全的访问

    5. 复杂隐藏代理
        用来隐藏一个类的复杂集合的复杂度，并进行访问
        。有时候也称“外观代理",这不难理解，复杂隐藏代理和外观模式不一样的，因为代理
        是访问控制，外观模式是提供一组接口

    6. 写入时复制代理
        用来控制对象的复制，方法是延迟对象的复制，直到客户真的需要为止，这是虚拟代理的辩题。

java代理：
    1. 静态代理
        实现接口重写
    2. jdk动态代理
        java.lang.reflect.Proxy接口
    3. cglib代理
        第三方jar包实现












