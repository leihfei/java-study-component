spring.datasource.common.driver-class-name=com.mysql.jdbc.Driver
# 配置最大连接
spring.datasource.common.maxActive=20
# 配置初始化连接池大小
spring.datasource.common.initialSize=5
# 配置必须保持连接的最小值
spring.datasource.common.minIdle=5
# 配置最大等待时间
spring.datasource.common.maxWait=60000
#
spring.datasource.common.maxPoolPreparedStatementPerConnectionSize=20
# 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
spring.datasource.common.timeBetweenEvictionRunsMillis=60000
# 配置一个连接在池中最小生存的时间，单位是毫秒
spring.datasource.common.minEvictableIdleTimeMillis=300000
#打开PSCache，并且指定每个连接上PSCache的大小
spring.datasource.common.poolPreparedStatements=true
# 验证数据库的有效性
spring.datasource.common.validation-query=SELECT 1 FROM DUAL
#验证连接的有效性
spring.datasource.common.test-while-idle=true
#获取连接时候验证，会影响性能
spring.datasource.common.test-on-borrow=true
#在连接归还到连接池时是否测试该连接
spring.datasource.common.test-on-return=false
# 通过connectProperties属性来打开mergeSql功能；慢SQL记录
spring.datasource.common.connectionProperties=druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000;
# 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
spring.datasource.common.filters=stat,wall,log4j,config
# 配置hibernate 格式化输出sql
spring.jpa.properties.hibernate.format_sql=true
# 根据实体自动创建表，更新，create-drop
spring.jpa.hibernate.ddl-auto=update
# 配置hibernate显示sql
spring.jpa.show-sql=true
# 配置hibernate
spring.jpa.generate-ddl=true
# 使用msyql
spring.jpa.database=mysql
#使用mysql方言
spring.jpa.database-platform=org.hibernate.dialect.MySQL5Dialect
# 避免java属性映射到数据库字段时，驼峰转下划线
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy

debug=false
logging.config=classpath:logback-spring.xml
# 日志级别
logging.level.root: trace
logging.level.org.springframework.web: DEBUG
logging.level.org.hibernate: ERROR





